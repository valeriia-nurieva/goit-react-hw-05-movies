{"version":3,"file":"static/js/884.bd7ae431.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAkB,mCAAG,WAAOC,GAAP,uFACPN,EAAAA,EAAAA,IAAA,iCAAoCC,EAApC,iCAAoEK,EAApE,gCADO,cACxBH,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,sDAKlBG,EAAY,mCAAG,WAAOC,GAAP,uFACDR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,oBAAmCP,EAAnC,oBADC,cAClBE,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZK,EAAe,mCAAG,WAAOD,GAAP,uFACJR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,4BAA2CP,EAA3C,oBADI,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfM,EAAe,mCAAG,WAAOF,GAAP,uFACJR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,4BAA2CP,EAA3C,2BADI,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qD,8IC6B5B,UA7CqB,WAAO,IAAD,IACjBI,GAAOG,EAAAA,EAAAA,MAAPH,GACR,GAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEyBV,EAAAA,EAAAA,IAAaC,GAFtC,OAEUU,EAFV,OAGIJ,EAASI,GAHb,gDAKIC,EAAAA,GAAAA,MAAY,iDALhB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACZ,IACJ,IAAQa,EAAuDR,EAAvDQ,MAAOC,EAAgDT,EAAhDS,YAAaC,EAAmCV,EAAnCU,aAAcC,EAAqBX,EAArBW,OAAQC,EAAaZ,EAAbY,SAC5CC,EAAY,oBAAGX,EAASY,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAC7C,OACE,4BACE,UAAC,KAAD,CAAMC,GAAIH,EAAV,WACE,SAAC,MAAD,IADF,cAIA,wBAAKL,KACL,gBAAKS,IAAG,UA1BO,mCA0BP,OAAoBR,GAAeS,IAAI,kBAC/C,wCAAgBR,MAChB,sCAAcE,MACd,oCAAYD,GAAUA,EAAOQ,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,UAC3D,2BACE,mDACA,yBACE,SAAC,KAAD,CAAMN,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGH,SAAC,EAAAO,SAAD,CAAUC,UAAU,gDAApB,UACC,SAAC,KAAD,OAEF,SAAC,KAAD,MAGL,C","sources":["api.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = '1d9e78535f6a01dcc41594da81e379a7';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async (query) => {\n    const response = await axios.get(`3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return response.data;\n};\n\nexport const getMovieById = async (id) => {\n    const response = await axios.get(`3/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const response = await axios.get(`3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n    const response = await axios.get(`3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;    \n}","import { useParams } from 'react-router-dom';\nimport { useEffect, useState, Suspense  } from 'react';\nimport { Link, Outlet, useLocation  } from 'react-router-dom';\nimport { getMovieById } from '../api';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { BsArrowLeftShort } from 'react-icons/bs';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        const result = await getMovieById(id);\n        setMovie(result);\n      } catch (error) {\n        toast.error('Oops! Something went wrong! Please try again.');\n      }\n    }\n    getMovie();\n  }, [id]);\n  const { title, poster_path, vote_average, genres, overview } = movie;\n  const backLinkHref = location.state?.from ?? \"/\";\n  return (\n    <div>\n      <Link to={backLinkHref}>\n        <BsArrowLeftShort />\n        Go back\n      </Link>\n      <h1>{title}</h1>\n      <img src={`${BASE_IMG_URL}${poster_path}`} alt=\"Movie poster\" />\n      <p>User Score: {vote_average}</p>\n      <p>Overview: {overview}</p>\n      <p>Genres: {genres && genres.map(genre => genre.name).join(', ')}</p>\n      <ul>\n        <p>Additional information</p>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n       <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n      <Toaster />\n    </div>\n  );\n};\n\nexport default MovieDetails;"],"names":["axios","API_KEY","getTrendingMovies","response","data","getMoviesByKeyword","query","getMovieById","id","getMovieCredits","getMovieReviews","useParams","useState","movie","setMovie","location","useLocation","useEffect","result","toast","getMovie","title","poster_path","vote_average","genres","overview","backLinkHref","state","from","to","src","alt","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}