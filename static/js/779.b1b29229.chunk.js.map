{"version":3,"file":"static/js/779.b1b29229.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAkB,mCAAG,WAAOC,GAAP,uFACPN,EAAAA,EAAAA,IAAA,iCAAoCC,EAApC,iCAAoEK,EAApE,gCADO,cACxBH,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,sDAKlBG,EAAY,mCAAG,WAAOC,GAAP,uFACDR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,oBAAmCP,EAAnC,oBADC,cAClBE,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZK,EAAe,mCAAG,WAAOD,GAAP,uFACJR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,4BAA2CP,EAA3C,oBADI,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfM,EAAe,mCAAG,WAAOF,GAAP,uFACJR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,4BAA2CP,EAA3C,2BADI,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qD,0LCvBfO,EAAaC,EAAAA,GAAAA,GAAH,4GAOVC,EAAaD,EAAAA,GAAAA,GAAH,iOAWVE,EAAeF,EAAAA,GAAAA,EAAH,6C,SC0BzB,EAvCgB,WACd,IAAQJ,GAAOO,EAAAA,EAAAA,MAAPP,GACR,GAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MACAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAGyBV,EAAAA,EAAAA,IAAgBF,GAHzC,OAGUc,EAHV,OAIIJ,EAAWI,GACXF,GAAa,GALjB,gDAOIG,EAAAA,GAAAA,MAAY,iDAPhB,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAAChB,IACJ,IAAQiB,EAAYR,EAAZQ,QACR,OACE,gCACE,SAACd,EAAD,UACGc,GAAWA,EAAQC,OAAS,EAC3BD,EAAQE,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQpB,EAAkB,EAAlBA,GAAIqB,EAAc,EAAdA,QACzB,OACE,UAAChB,EAAD,YACE,SAACC,EAAD,UAAec,KACf,uBAAIC,MAFWrB,EAKpB,KAED,yEAGHW,IAAa,SAACW,EAAA,EAAD,MAGnB,C","sources":["api.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = '1d9e78535f6a01dcc41594da81e379a7';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async (query) => {\n    const response = await axios.get(`3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return response.data;\n};\n\nexport const getMovieById = async (id) => {\n    const response = await axios.get(`3/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const response = await axios.get(`3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n    const response = await axios.get(`3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;    \n}","import styled from 'styled-components';\n\nexport const ReviewsBox = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  gap: 20px;\n`;\n\nexport const ReviewCard = styled.li`\n  flex-basis: calc((100% - 20px) / 2);\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  row-gap: 4px;\n  padding: 8px;\n  border-radius: 4px;\n  border: 1px dashed #ff4500;\n`;\n\nexport const ReviewAuthor = styled.p`\n  font-weight: 600;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { getMovieReviews } from '../../api';\nimport { Loader } from 'components/Loader';\nimport { ReviewsBox, ReviewCard, ReviewAuthor } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    async function getActors() {\n      try {\n        setIsLoading(true);\n        const result = await getMovieReviews(id);\n        setReviews(result);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Oops! Something went wrong! Please try again.');\n      }\n    }\n    getActors();\n  }, [id]);\n  const { results } = reviews;\n  return (\n    <section>\n      <ReviewsBox>\n        {results && results.length > 0 ? (\n          results.map(({ author, id, content }) => {\n            return (\n              <ReviewCard key={id}>\n                <ReviewAuthor>{author}</ReviewAuthor>\n                <p>{content}</p>\n              </ReviewCard>\n            );\n          })\n        ) : (\n          <div>We don't have any reviews for this movies</div>\n        )}\n      </ReviewsBox>\n      {isLoading && <Loader />}\n    </section>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","getMoviesByKeyword","query","getMovieById","id","getMovieCredits","getMovieReviews","ReviewsBox","styled","ReviewCard","ReviewAuthor","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","result","toast","getActors","results","length","map","author","content","Loader"],"sourceRoot":""}