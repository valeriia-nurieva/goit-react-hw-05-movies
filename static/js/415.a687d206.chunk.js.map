{"version":3,"file":"static/js/415.a687d206.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAkB,mCAAG,WAAOC,GAAP,uFACPN,EAAAA,EAAAA,IAAA,iCAAoCC,EAApC,iCAAoEK,EAApE,gCADO,cACxBH,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,sDAKlBG,EAAY,mCAAG,WAAOC,GAAP,uFACDR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,oBAAmCP,EAAnC,oBADC,cAClBE,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZK,EAAe,mCAAG,WAAOD,GAAP,uFACJR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,4BAA2CP,EAA3C,oBADI,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfM,EAAe,mCAAG,WAAOF,GAAP,uFACJR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,4BAA2CP,EAA3C,2BADI,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qD,0HCW5B,UA/Ba,WACX,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAE8BZ,EAAAA,EAAAA,MAF9B,gBAEYa,EAFZ,EAEYA,QACRF,EAAUE,GAHd,gDAKIC,EAAAA,GAAAA,MAAY,iDALhB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,KAGD,6BACE,wBACGL,EAAOM,KAAI,YAA0B,IAAvBV,EAAsB,EAAtBA,GAAIW,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACxB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAab,GAAMc,MAAO,CAAEC,KAAK,WAAD,OAAaf,EAAb,MAAxC,SAA8DW,GAASC,KADhEZ,EAIZ,OAEH,SAAC,KAAD,MAGL,C","sources":["api.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = '1d9e78535f6a01dcc41594da81e379a7';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async (query) => {\n    const response = await axios.get(`3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return response.data;\n};\n\nexport const getMovieById = async (id) => {\n    const response = await axios.get(`3/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const response = await axios.get(`3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n    const response = await axios.get(`3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;    \n}","import toast, { Toaster } from 'react-hot-toast';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getTrendingMovies } from 'api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        const { results } = await getTrendingMovies();\n        setMovies(results);\n      } catch (error) {\n        toast.error('Oops! Something went wrong! Please try again.');\n      }\n    }\n    getMovies();\n  }, []);\n\n  return (\n    <main>\n      <ul>\n        {movies.map(({ id, title, name }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: `/movies/${id} `}}>{title || name}</Link>\n            </li>\n          );\n        })}\n      </ul>\n      <Toaster />\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","getMoviesByKeyword","query","getMovieById","id","getMovieCredits","getMovieReviews","useState","movies","setMovies","useEffect","results","toast","getMovies","map","title","name","to","state","from"],"sourceRoot":""}