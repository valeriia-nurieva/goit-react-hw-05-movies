{"version":3,"file":"static/js/597.8d20da8d.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAkB,mCAAG,WAAOC,GAAP,uFACPN,EAAAA,EAAAA,IAAA,iCAAoCC,EAApC,iCAAoEK,EAApE,gCADO,cACxBH,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,sDAKlBG,EAAY,mCAAG,WAAOC,GAAP,uFACDR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,oBAAmCP,EAAnC,oBADC,cAClBE,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZK,EAAe,mCAAG,WAAOD,GAAP,uFACJR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,4BAA2CP,EAA3C,oBADI,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfM,EAAe,mCAAG,WAAOF,GAAP,uFACJR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,4BAA2CP,EAA3C,2BADI,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qD,0HCe5B,UAjCa,WACX,IAAQI,GAAOG,EAAAA,EAAAA,MAAPH,GACR,GAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEyBN,EAAAA,EAAAA,IAAgBD,GAFzC,OAEUQ,EAFV,OAGIF,EAAUE,GAHd,gDAKIC,EAAAA,GAAAA,MAAY,iDALhB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACV,KAGF,8BACE,wBACGK,EAAOM,MACNN,EAAOM,KAAKC,KAAI,YAA4C,IAAzCZ,EAAwC,EAAxCA,GAAIa,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACzC,OACE,2BACE,gBAAKC,IAAG,UAxBH,mCAwBG,OAAoBH,GAAgBI,IAAI,WAChD,uBAAIH,KACJ,uBAAIC,MAHGf,EAMZ,OAIV,C","sources":["api.js","components/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = '1d9e78535f6a01dcc41594da81e379a7';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async (query) => {\n    const response = await axios.get(`3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return response.data;\n};\n\nexport const getMovieById = async (id) => {\n    const response = await axios.get(`3/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const response = await axios.get(`3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n    const response = await axios.get(`3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;    \n}","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../api';\nimport toast from 'react-hot-toast';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [actors, setActors] = useState([]);\n  useEffect(() => {\n    async function getActors() {\n      try {\n        const result = await getMovieCredits(id);\n        setActors(result);\n      } catch (error) {\n        toast.error('Oops! Something went wrong! Please try again.');\n      }\n    }\n    getActors();\n  }, [id]);\n\n  return (\n    <section>\n      <ul>\n        {actors.cast &&\n          actors.cast.map(({ id, profile_path, name, character }) => {\n            return (\n              <li key={id}>\n                <img src={`${BASE_IMG_URL}${profile_path}`} alt=\"Actor\" />\n                <p>{name}</p>\n                <p>{character}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Cast;"],"names":["axios","API_KEY","getTrendingMovies","response","data","getMoviesByKeyword","query","getMovieById","id","getMovieCredits","getMovieReviews","useParams","useState","actors","setActors","useEffect","result","toast","getActors","cast","map","profile_path","name","character","src","alt"],"sourceRoot":""}