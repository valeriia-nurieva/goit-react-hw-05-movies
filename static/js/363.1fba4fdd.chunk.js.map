{"version":3,"file":"static/js/363.1fba4fdd.chunk.js","mappings":"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","sources":["api.js","pages/MovieDetails/MovieDetails.styles.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = '1d9e78535f6a01dcc41594da81e379a7';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async (query) => {\n    const response = await axios.get(`3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return response.data;\n};\n\nexport const getMovieById = async (id) => {\n    const response = await axios.get(`3/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const response = await axios.get(`3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n    const response = await axios.get(`3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;    \n}","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackLinkHref = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 8px;\n  margin-bottom: 8px;\n  color: #000000;\n  transition: color 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  &:hover {\n    color: #ff4500;\n  }\n`;\n\nexport const MovieCard = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 16px;\n`;\n\nexport const Image = styled.img`\n  width: 320px;\n  border-radius: 5px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 16px;\n`;\n\nexport const InfoTitle = styled.p`\n  font-weight: 600;\n  color: #ff4500;\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\nexport const Info = styled.span`\n  font-weight: 400;\n  color: #000000;\n`;\n\nexport const AdditionalTitle = styled.h2`\n  margin-bottom: 8px;\n`\n\nexport const AdditionalInfo = styled(Link)`\n  text-decoration: none;\n  color: #ff4500;\n  font-weight: 500;\n  display: block;\n    :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`\n","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from '../../api';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { BsArrowLeftShort } from 'react-icons/bs';\nimport { Loader } from 'components/Loader';\nimport {\n  BackLinkHref,\n  MovieCard,\n  Image,\n  Title,\n  InfoTitle,\n  Info,\n  AdditionalTitle,\n  AdditionalInfo\n} from './MovieDetails.styles';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        setIsLoading(true);\n        const result = await getMovieById(id);\n        setMovie(result);\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Oops! Something went wrong! Please try again.');\n      }\n    }\n    getMovie();\n  }, [id]);\n  const { title, poster_path, vote_average, genres, overview } = movie;\n  const backLinkHref = location.state?.from ?? '/';\n  const totalVoteAverage = 10;\n  const percent = (vote_average * 100) / totalVoteAverage;\n  return (\n    <>\n      <BackLinkHref to={backLinkHref}>\n        <BsArrowLeftShort />\n        Go back\n      </BackLinkHref>\n      <MovieCard>\n        <Image src={poster_path? `${BASE_IMG_URL}${poster_path}` : 'https://i.ibb.co/4ThsTsv/poster-coming-soon.jpg'} alt=\"Movie poster\" />\n        <div>\n          <Title>{title}</Title>\n          <InfoTitle>\n            User Score: <Info>{percent.toFixed()}%</Info>\n          </InfoTitle>\n          <InfoTitle>\n            Overview: <Info> {overview}</Info>\n          </InfoTitle>\n          <InfoTitle>\n            Genres:{' '}\n            <Info>{genres && genres.map(genre => genre.name).join(', ')}</Info>\n          </InfoTitle>\n        </div>\n      </MovieCard>\n      <AdditionalTitle>Additional information</AdditionalTitle>\n      <AdditionalInfo to=\"cast\">Cast</AdditionalInfo>\n      <AdditionalInfo to=\"reviews\">Reviews</AdditionalInfo>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n      {isLoading && <Loader />}\n      <Toaster />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","getMoviesByKeyword","query","getMovieById","id","getMovieCredits","getMovieReviews","BackLinkHref","styled","Link","MovieCard","Image","Title","InfoTitle","Info","AdditionalTitle","AdditionalInfo","useParams","useState","movie","setMovie","isLoading","setIsLoading","location","useLocation","useEffect","result","toast","getMovie","title","poster_path","vote_average","genres","overview","backLinkHref","state","from","percent","to","src","alt","toFixed","map","genre","name","join","Suspense","fallback","Loader"],"sourceRoot":""}