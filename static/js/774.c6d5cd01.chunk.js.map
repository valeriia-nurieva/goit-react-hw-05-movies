{"version":3,"file":"static/js/774.c6d5cd01.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAkB,mCAAG,WAAOC,GAAP,uFACPN,EAAAA,EAAAA,IAAA,iCAAoCC,EAApC,iCAAoEK,EAApE,gCADO,cACxBH,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,sDAKlBG,EAAY,mCAAG,WAAOC,GAAP,uFACDR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,oBAAmCP,EAAnC,oBADC,cAClBE,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZK,EAAe,mCAAG,WAAOD,GAAP,uFACJR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,4BAA2CP,EAA3C,oBADI,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKfM,EAAe,mCAAG,WAAOF,GAAP,uFACJR,EAAAA,EAAAA,IAAA,kBAAqBQ,EAArB,4BAA2CP,EAA3C,2BADI,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qD,gLCtBfO,EAAOC,EAAAA,GAAAA,KAAH,8KAUJC,EAAQD,EAAAA,GAAAA,MAAH,0PAeLE,EAASF,EAAAA,GAAAA,OAAH,+U,6BCtBNG,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOX,EAAP,KAAcY,EAAd,KAaA,OACE,iCACE,UAACP,EAAD,CAAMK,SAXiB,SAAAG,GAEzB,GADAA,EAAIC,iBACiB,KAAjBd,EAAMe,OACR,OAAOC,EAAAA,GAAAA,MAAY,0BAErBN,EAASV,GACTY,EAAS,GACV,EAIG,WACE,SAACJ,EAAD,CAAQS,KAAK,SAAb,UACE,SAAC,MAAD,OAGF,SAACV,EAAD,CACEU,KAAK,OACLC,KAAK,SACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOtB,EACPuB,SAzBkB,SAAAV,GAAG,OAAID,EAASC,EAAIW,OAAOF,MAAMG,cAA9B,QA4BzB,SAAC,KAAD,MAGL,ECYD,EA7Ce,WACb,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCjB,EAAAA,EAAAA,UAAS,IAAjD,eAAOkB,EAAP,KAAqBC,EAArB,KACM9B,EAAQ2B,EAAaI,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WAAM,wCAId,gHAE8BjC,EAAAA,EAAAA,IAAmBC,GAFjD,iBAEYiC,EAFZ,EAEYA,SACAC,OAAS,EAAIJ,EAAgBG,GAAWjB,EAAAA,GAAAA,MAAA,wEAA6EhB,IAHjI,gDAKIgB,EAAAA,GAAAA,MAAY,iDALhB,0DAJc,sBACThB,GADS,mCAYdmC,EACD,GAAE,CAACnC,IAEJ,IAIMoC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,6BACE,SAAC5B,EAAD,CAAWC,SARM,SAAAV,GACnB4B,EAAgB,CAAE5B,MAAOA,GAC1B,IAOI6B,IACC,wBACGA,EAAaS,KAAI,YAA0B,IAAvBpC,EAAsB,EAAtBA,GAAIqC,EAAkB,EAAlBA,MAAOrB,EAAW,EAAXA,KAC9B,OACE,yBACE,SAAC,KAAD,CAAMsB,GAAE,kBAAatC,GAAMuC,MAAO,CAAEC,KAAMN,GAA1C,SAAuDG,GAASrB,KADzDhB,EAIZ,OAGL,SAAC,KAAD,MAGL,C","sources":["api.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = '1d9e78535f6a01dcc41594da81e379a7';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async (query) => {\n    const response = await axios.get(`3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return response.data;\n};\n\nexport const getMovieById = async (id) => {\n    const response = await axios.get(`3/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const response = await axios.get(`3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n    const response = await axios.get(`3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;    \n}","import styled from \"styled-components\";\n\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Form, Input, Button } from './SearchBox.styled';\nimport { FiSearch } from 'react-icons/fi';\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport const Searchbox = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = evt => setQuery(evt.target.value.toLowerCase());\n\n  const handleSearchSubmit = evt => {\n    evt.preventDefault();\n    if (query.trim() === '') {\n      return toast.error('Please enter something');\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSearchSubmit}>\n        <Button type=\"submit\">\n          <FiSearch />\n        </Button>\n\n        <Input\n          type=\"text\"\n          name=\"search\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n      </Form>\n      <Toaster />\n    </>\n  );\n};\n\nSearchbox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMoviesByKeyword } from '../api';\nimport { Searchbox } from 'components/SearchBox/SearchBox';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMovies, setSearchMovies] = useState('');\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    async function getMovie() {\n      try {\n        const { results } = await getMoviesByKeyword(query);\n        results.length > 0 ? setSearchMovies(results) : toast.error(`Sorry! We couldn't find any movies matching your search query ${query}`);\n      } catch (error) {\n        toast.error('Oops! Something went wrong! Please try again.');\n      }\n    }\n    getMovie();\n  }, [query]);\n\n  const handleSumbit = query => {\n    setSearchParams({ query: query });\n  };\n\n  const location = useLocation();\n\n  return (\n    <main>\n      <Searchbox onSubmit={handleSumbit} />\n      {searchMovies && (\n        <ul>\n          {searchMovies.map(({ id, title, name }) => {\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>{title || name}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      <Toaster />\n    </main>\n  );\n};\n\nexport default Movies;"],"names":["axios","API_KEY","getTrendingMovies","response","data","getMoviesByKeyword","query","getMovieById","id","getMovieCredits","getMovieReviews","Form","styled","Input","Button","Searchbox","onSubmit","useState","setQuery","evt","preventDefault","trim","toast","type","name","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","searchMovies","setSearchMovies","get","useEffect","results","length","getMovie","location","useLocation","map","title","to","state","from"],"sourceRoot":""}