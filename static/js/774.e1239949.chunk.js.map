{"version":3,"file":"static/js/774.e1239949.chunk.js","mappings":"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","sources":["api.js","components/MoviesGallery/MoviesGalleryItem.styled.js","components/MoviesGallery/MoviesGalleryItem.jsx","components/MoviesGallery/MoviesGallery.styled.js","components/MoviesGallery/MoviesGallery.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = '1d9e78535f6a01dcc41594da81e379a7';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMoviesByKeyword = async (query) => {\n    const response = await axios.get(`3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n    return response.data;\n};\n\nexport const getMovieById = async (id) => {\n    const response = await axios.get(`3/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const response = await axios.get(`3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n    const response = await axios.get(`3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;    \n}","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Image = styled.img`\n  margin-bottom: 10px;\n  transition: background 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  border-radius: 5px;\n  &:hover,\n  &:focus {\n    background: #c4c4c4;\n    box-shadow: 0px 8px 43px rgba(255, 107, 1, 0.6);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #000000;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Image, StyledLink } from './MoviesGalleryItem.styled';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const MoviesGalleryItem = ({ title, id, name, posterPath }) => {\n  const location = useLocation();\n  return (\n    <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n      <Image src={posterPath? `${BASE_IMG_URL}${posterPath}` : 'https://i.ibb.co/4ThsTsv/poster-coming-soon.jpg'} alt=\"Movie poster\" />\n      {title || name}\n    </StyledLink>\n  );\n};\n\nMoviesGalleryItem.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.number,\n  name: PropTypes.string,\n  posterPath: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const GalleryBox = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const GalleryItem = styled.li`\n  flex-basis: calc((100% - 60px) / 4);\n`;","import PropTypes from 'prop-types';\nimport { MoviesGalleryItem } from './MoviesGalleryItem';\nimport { GalleryBox, GalleryItem } from './MoviesGallery.styled';\n\nexport const MoviesGallery = ({ movies }) => {\n  return (\n    <GalleryBox>\n      {movies.map(({ id, title, name, poster_path }) => {\n        return (\n          <GalleryItem key={id}>\n            <MoviesGalleryItem id={id} title={title} name={name} posterPath={poster_path} />\n          </GalleryItem>\n        );\n      })}\n    </GalleryBox>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: baseline;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 1px dashed #696969;\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  background-color: transparent;\n  :hover {\n    opacity: 1;\n  }\n`;","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Form, Input, Button } from './SearchBox.styled';\nimport { FiSearch } from 'react-icons/fi';\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport const Searchbox = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = evt => setQuery(evt.target.value.toLowerCase());\n\n  const handleSearchSubmit = evt => {\n    evt.preventDefault();\n    if (query.trim() === '') {\n      return toast.error('Please enter something');\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSearchSubmit}>\n        <Button type=\"submit\">\n          <FiSearch />\n        </Button>\n\n        <Input\n          type=\"text\"\n          name=\"search\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n      </Form>\n      <Toaster />\n    </>\n  );\n};\n\nSearchbox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { getMoviesByKeyword } from '../api';\nimport { Searchbox } from 'components/SearchBox/SearchBox';\nimport { MoviesGallery } from 'components/MoviesGallery/MoviesGallery';\nimport { Loader } from 'components/Loader';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMovies, setSearchMovies] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    async function getMovie() {\n      try {\n        setIsLoading(true);\n        const { results } = await getMoviesByKeyword(query);\n        results.length > 0\n          ? setSearchMovies(results)\n          : toast.error(\n              `Sorry! We couldn't find any movies matching your search query ${query}`\n          );\n        setIsLoading(false);\n      } catch (error) {\n        toast.error('Oops! Something went wrong! Please try again.');\n      }\n    }\n    getMovie();\n  }, [query]);\n\n  const handleSumbit = query => {\n    setSearchParams({ query: query });\n  };\n\n  return (\n    <main>\n      <Searchbox onSubmit={handleSumbit} />\n      {searchMovies && <MoviesGallery movies={searchMovies} />}\n      {isLoading && <Loader />}\n      <Toaster />\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","getTrendingMovies","response","data","getMoviesByKeyword","query","getMovieById","id","getMovieCredits","getMovieReviews","Image","styled","StyledLink","Link","MoviesGalleryItem","title","name","posterPath","location","useLocation","to","state","from","src","alt","GalleryBox","GalleryItem","MoviesGallery","movies","map","poster_path","Form","Input","Button","Searchbox","onSubmit","useState","setQuery","evt","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","searchMovies","setSearchMovies","isLoading","setIsLoading","get","useEffect","results","length","getMovie","Loader"],"sourceRoot":""}